package report_0110;

import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class Timer extends JFrame implements ActionListener, Runnable {
	private JLabel label;
	private JButton startBtn;
	private JButton stopBtn;
	private boolean t_Status = true; 
	
	public Timer() {
		setLayout(null);
	//	con.setLayout(new BorderLayout());
		label = new JLabel("0");
		JPanel p = new JPanel(new FlowLayout(FlowLayout.RIGHT));
		stopBtn = new JButton("중지");
		startBtn = new JButton("시작");
		p.add(startBtn);
		p.add(stopBtn);
//		con.add("Center", label);
	//	con.add("South", p);
		
		
		startBtn.addActionListener(this);
		stopBtn.addActionListener(this);
		
		setBounds(700, 200, 300, 200);
		setVisible(true);
//종료		
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				System.exit(0);
			}
		});	
	}
	
	@Override
	public void run() {
		int count=1;
		
		while(true) {
			label.setText(count+""); 
			if(!t_Status) break;
			try {
				Thread.sleep(1000);//1초, 대기시간을 줘라
				count++;
			} catch (InterruptedException e) {
				e.printStackTrace();
			} 
			if(count == 20) break;
		}
		startBtn.setEnabled(true);
		stopBtn.setEnabled(false);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Thread t;
		
		if(e.getSource() == startBtn) {
			t = new Thread(this);
			t.start();
			
			t_Status = true;
			startBtn.setEnabled(false);
			stopBtn.setEnabled(true);
		}
		else if(e.getSource() == stopBtn){
			t = null; //스레드가 계속 쌓이는거 방지
			t_Status = false;
			startBtn.setEnabled(true);
			stopBtn.setEnabled(false);
		}
	}

	public static void main(String[] args) {
		new Timer();
	}
	
}
