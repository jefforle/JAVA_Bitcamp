/* 1/16(목) 3-3 */
package network;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class ProtocolServer {
	private ServerSocket serverSocket;
	private Socket socket;
	private BufferedReader br;
	private BufferedWriter bw;
	
	public ProtocolServer() {
		try {
			serverSocket = new ServerSocket(9500);
			System.out.println("서버준비완료....");
			
			socket = serverSocket.accept();//낚아챈다
			br = new BufferedReader(new InputStreamReader(socket.getInputStream())); 
			bw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())); //소켓은 나만갖고 있는게 아니라 상대방도 가지고 있음
			
		} catch (IOException e) {
			System.out.println("클라이언트와 연결이 안되었습니다.");
			e.printStackTrace();
			System.exit(0);
		}
		String line;
		while(true) {
			try {
				//받는쪽
				line = br.readLine();//클라이언트가 write()한걸 받아 읽어라
				
				//보내는쪽
				String[] ar = line.split(":");
				if(ar[0].equals(Protocol.ENTER)) {
					bw.write(ar[1]+"님 입장");
					bw.flush();
					
				}else if(ar[0].equals(Protocol.EXIT)) {
					bw.write(ar[1]+"님 퇴장");
					bw.flush();
					
					bw.close();
					br.close();
					socket.close();
					
					System.exit(0);
				}else if(ar[0].equals(Protocol.SEND_MESSAGE)) {
					bw.write("["+ar[1]+"]"+ar[2]+"\n");
				}
					
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
	}
	
	public static void main(String[] args) {
		new ProtocolServer();
	}
	
}
